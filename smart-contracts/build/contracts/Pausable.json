{
  "contractName": "Pausable",
  "abi": [
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n",
  "sourcePath": "@openzeppelin\\contracts\\utils\\Pausable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
    "exportedSymbols": {
      "Context": [
        2315
      ],
      "Pausable": [
        2543
      ]
    },
    "id": 2544,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2437,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "102:24:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 2439,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2544,
        "sourceUnit": 2316,
        "src": "128:45:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2438,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2315,
              "src": "136:7:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2441,
              "name": "Context",
              "nameLocations": [
                "645:7:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2315,
              "src": "645:7:21"
            },
            "id": 2442,
            "nodeType": "InheritanceSpecifier",
            "src": "645:7:21"
          }
        ],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2440,
          "nodeType": "StructuredDocumentation",
          "src": "175:439:21",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "id": 2543,
        "linearizedBaseContracts": [
          2543,
          2315
        ],
        "name": "Pausable",
        "nameLocation": "633:8:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2444,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "672:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 2543,
            "src": "659:20:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2443,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "659:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2445,
              "nodeType": "StructuredDocumentation",
              "src": "686:73:21",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "id": 2449,
            "name": "Paused",
            "nameLocation": "770:6:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2447,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "785:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "777:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "776:17:21"
            },
            "src": "764:30:21"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2450,
              "nodeType": "StructuredDocumentation",
              "src": "800:70:21",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "id": 2454,
            "name": "Unpaused",
            "nameLocation": "881:8:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2452,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "898:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2454,
                  "src": "890:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:17:21"
            },
            "src": "875:32:21"
          },
          {
            "documentation": {
              "id": 2455,
              "nodeType": "StructuredDocumentation",
              "src": "913:76:21",
              "text": " @dev The operation failed because the contract is paused."
            },
            "errorSelector": "d93c0665",
            "id": 2457,
            "name": "EnforcedPause",
            "nameLocation": "1000:13:21",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:2:21"
            },
            "src": "994:22:21"
          },
          {
            "documentation": {
              "id": 2458,
              "nodeType": "StructuredDocumentation",
              "src": "1022:80:21",
              "text": " @dev The operation failed because the contract is not paused."
            },
            "errorSelector": "8dfc202b",
            "id": 2460,
            "name": "ExpectedPause",
            "nameLocation": "1113:13:21",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:21"
            },
            "src": "1107:22:21"
          },
          {
            "body": {
              "id": 2467,
              "nodeType": "Block",
              "src": "1340:47:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2463,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2497,
                      "src": "1350:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:19:21"
                },
                {
                  "id": 2466,
                  "nodeType": "PlaceholderStatement",
                  "src": "1379:1:21"
                }
              ]
            },
            "documentation": {
              "id": 2461,
              "nodeType": "StructuredDocumentation",
              "src": "1135:175:21",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 2468,
            "name": "whenNotPaused",
            "nameLocation": "1324:13:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1337:2:21"
            },
            "src": "1315:72:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2475,
              "nodeType": "Block",
              "src": "1587:44:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2471,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2510,
                      "src": "1597:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 2472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2473,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:16:21"
                },
                {
                  "id": 2474,
                  "nodeType": "PlaceholderStatement",
                  "src": "1623:1:21"
                }
              ]
            },
            "documentation": {
              "id": 2469,
              "nodeType": "StructuredDocumentation",
              "src": "1393:167:21",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "id": 2476,
            "name": "whenPaused",
            "nameLocation": "1574:10:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1584:2:21"
            },
            "src": "1565:66:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2484,
              "nodeType": "Block",
              "src": "1779:31:21",
              "statements": [
                {
                  "expression": {
                    "id": 2482,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2444,
                    "src": "1796:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2481,
                  "id": 2483,
                  "nodeType": "Return",
                  "src": "1789:14:21"
                }
              ]
            },
            "documentation": {
              "id": 2477,
              "nodeType": "StructuredDocumentation",
              "src": "1637:84:21",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 2485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1735:6:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1741:2:21"
            },
            "returnParameters": {
              "id": 2481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2485,
                  "src": "1773:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2479,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1772:6:21"
            },
            "scope": 2543,
            "src": "1726:84:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2496,
              "nodeType": "Block",
              "src": "1929:77:21",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2489,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2485,
                      "src": "1943:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 2490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:8:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2495,
                  "nodeType": "IfStatement",
                  "src": "1939:61:21",
                  "trueBody": {
                    "id": 2494,
                    "nodeType": "Block",
                    "src": "1953:47:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2491,
                            "name": "EnforcedPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2457,
                            "src": "1974:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1974:15:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2493,
                        "nodeType": "RevertStatement",
                        "src": "1967:22:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2486,
              "nodeType": "StructuredDocumentation",
              "src": "1816:57:21",
              "text": " @dev Throws if the contract is paused."
            },
            "id": 2497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "1887:17:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:21"
            },
            "returnParameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:0:21"
            },
            "scope": 2543,
            "src": "1878:128:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2509,
              "nodeType": "Block",
              "src": "2126:78:21",
              "statements": [
                {
                  "condition": {
                    "id": 2503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2140:9:21",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2501,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "2141:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2141:8:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2508,
                  "nodeType": "IfStatement",
                  "src": "2136:62:21",
                  "trueBody": {
                    "id": 2507,
                    "nodeType": "Block",
                    "src": "2151:47:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2504,
                            "name": "ExpectedPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2460,
                            "src": "2172:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2172:15:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2506,
                        "nodeType": "RevertStatement",
                        "src": "2165:22:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2498,
              "nodeType": "StructuredDocumentation",
              "src": "2012:61:21",
              "text": " @dev Throws if the contract is not paused."
            },
            "id": 2510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2087:14:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2101:2:21"
            },
            "returnParameters": {
              "id": 2500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2126:0:21"
            },
            "scope": 2543,
            "src": "2078:126:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2525,
              "nodeType": "Block",
              "src": "2388:66:21",
              "statements": [
                {
                  "expression": {
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2516,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2444,
                      "src": "2398:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2408:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2398:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:14:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2521,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2297,
                          "src": "2434:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2520,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2449,
                      "src": "2427:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:20:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2524,
                  "nodeType": "EmitStatement",
                  "src": "2422:25:21"
                }
              ]
            },
            "documentation": {
              "id": 2511,
              "nodeType": "StructuredDocumentation",
              "src": "2210:124:21",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "id": 2526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2513,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2374:13:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2468,
                  "src": "2374:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2374:13:21"
              }
            ],
            "name": "_pause",
            "nameLocation": "2348:6:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2354:2:21"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2388:0:21"
            },
            "scope": 2543,
            "src": "2339:115:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2541,
              "nodeType": "Block",
              "src": "2634:69:21",
              "statements": [
                {
                  "expression": {
                    "id": 2534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2532,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2444,
                      "src": "2644:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2654:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2644:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2535,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:15:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2537,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2297,
                          "src": "2683:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2683:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2536,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "2674:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:22:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2540,
                  "nodeType": "EmitStatement",
                  "src": "2669:27:21"
                }
              ]
            },
            "documentation": {
              "id": 2527,
              "nodeType": "StructuredDocumentation",
              "src": "2460:121:21",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "id": 2542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2529,
                  "name": "whenPaused",
                  "nameLocations": [
                    "2623:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2476,
                  "src": "2623:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2623:10:21"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2595:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:2:21"
            },
            "returnParameters": {
              "id": 2531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:0:21"
            },
            "scope": 2543,
            "src": "2586:117:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2544,
        "src": "615:2090:21",
        "usedErrors": [
          2457,
          2460
        ],
        "usedEvents": [
          2449,
          2454
        ]
      }
    ],
    "src": "102:2604:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-28T22:20:58.226Z",
  "devdoc": {
    "details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
    "errors": {
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}